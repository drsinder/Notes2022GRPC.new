@*@inject Blazored.SessionStorage.ISessionStorageService sessionStorage
*@
<Blazored.Modal.CascadingBlazoredModal HideCloseButton="true" DisableBackgroundCancel="true" HideHeader="true" Class="blazored-custom-modal">
    <Router AppAssembly="@typeof(App).Assembly">
        <Found Context="routeData">
            <RouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)" />
            <FocusOnNavigate RouteData="@routeData" Selector="h1" />
        </Found>
        <NotFound>
            <PageTitle>Not found</PageTitle>
            <LayoutView Layout="@typeof(MainLayout)">
                <p role="alert">Sorry, there's nothing at this address.</p>
            </LayoutView>
        </NotFound>
    </Router>
</Blazored.Modal.CascadingBlazoredModal>

@*
@code {


    protected override async Task OnInitializedAsync()
    {
        LoginReply lr = await GetLoginReply();
        if (lr is not null)
            Globals.LoginReply = lr;
    }
    public async Task<LoginReply> GetLoginReply()
    {
        return  (LoginReply)(await sessionStorage.GetItemAsync<LoginReply>("LoginReply"));
    }

    public async void SetLoginReply(LoginReply reply)
    {
        await sessionStorage.SetItemAsync<LoginReply>("LoginReply", reply);
    }

}
*@
