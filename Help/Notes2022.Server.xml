<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Notes2022.Server</name>
  </assembly>
  <members>
    <member name="T:Notes2022.Server.Data.NotesDbContext">
      <summary> Class NotesDbContext. Implements the <see cref="Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext{Notes2022.Server.Entities.ApplicationUser}" /></summary>
      <seealso cref="Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext{Notes2022.Server.Entities.ApplicationUser}" />
    </member>
    <member name="P:Notes2022.Server.Data.NotesDbContext.TZone">
      <summary>
   Gets or sets the t zone.
   </summary>
      <value>The t zone.</value>
    </member>
    <member name="P:Notes2022.Server.Data.NotesDbContext.NoteFile">
      <summary>
   Gets or sets the note file.
   </summary>
      <value>The note file.</value>
    </member>
    <member name="P:Notes2022.Server.Data.NotesDbContext.NoteAccess">
      <summary>
   Gets or sets the note access.
   </summary>
      <value>The note access.</value>
    </member>
    <member name="P:Notes2022.Server.Data.NotesDbContext.NoteHeader">
      <summary>
   Gets or sets the note header.
   </summary>
      <value>The note header.</value>
    </member>
    <member name="P:Notes2022.Server.Data.NotesDbContext.NoteContent">
      <summary>
   Gets or sets the content of the note.
   </summary>
      <value>The content of the note.</value>
    </member>
    <member name="P:Notes2022.Server.Data.NotesDbContext.Tags">
      <summary>
   Gets or sets the tags.
   </summary>
      <value>The tags.</value>
    </member>
    <member name="P:Notes2022.Server.Data.NotesDbContext.Audit">
      <summary>
   Gets or sets the audit.
   </summary>
      <value>The audit.</value>
    </member>
    <member name="P:Notes2022.Server.Data.NotesDbContext.HomePageMessage">
      <summary>
   Gets or sets the home page message.
   </summary>
      <value>The home page message.</value>
    </member>
    <member name="P:Notes2022.Server.Data.NotesDbContext.Mark">
      <summary>
   Gets or sets the mark.
   </summary>
      <value>The mark.</value>
    </member>
    <member name="P:Notes2022.Server.Data.NotesDbContext.Search">
      <summary>
   Gets or sets the search.
   </summary>
      <value>The search.</value>
    </member>
    <member name="P:Notes2022.Server.Data.NotesDbContext.Sequencer">
      <summary>
   Gets or sets the sequencer.
   </summary>
      <value>The sequencer.</value>
    </member>
    <member name="P:Notes2022.Server.Data.NotesDbContext.Subscription">
      <summary>
   Gets or sets the subscription.
   </summary>
      <value>The subscription.</value>
    </member>
    <member name="P:Notes2022.Server.Data.NotesDbContext.SQLFile">
      <summary>
   Gets or sets the SQL file.
   </summary>
      <value>The SQL file.</value>
    </member>
    <member name="P:Notes2022.Server.Data.NotesDbContext.SQLFileContent">
      <summary>
   Gets or sets the content of the SQL file.
   </summary>
      <value>The content of the SQL file.</value>
    </member>
    <member name="P:Notes2022.Server.Data.NotesDbContext.LinkedFile">
      <summary>
   Gets or sets the linked file.
   </summary>
      <value>The linked file.</value>
    </member>
    <member name="P:Notes2022.Server.Data.NotesDbContext.LinkQueue">
      <summary>
   Gets or sets the link queue.
   </summary>
      <value>The link queue.</value>
    </member>
    <member name="P:Notes2022.Server.Data.NotesDbContext.LinkLog">
      <summary>
   Gets or sets the link log.
   </summary>
      <value>The link log.</value>
    </member>
    <member name="M:Notes2022.Server.Data.NotesDbContext.#ctor(DbContextOptions{NotesDbContext})">
      <summary>
   Initializes a new instance of the <see cref="T:Notes2022.Server.Data.NotesDbContext" /> class.
   </summary>
      <param name="options">The options.</param>
    </member>
    <member name="T:Notes2022.Server.Entities.ApplicationUser">
      <summary>
   Extentions to the base IdentityUser
   Contains fields mirrored locally in UserData
   These fields are accessed and edited there and then written back
   enmass.  By contrast the predefined field not seen here are
   almost always accessed via methods.  These methods create a Validation
   Stamp for the predefined fields.  Tinker with those directly and
   you will probably make the user "Unusable".
   </summary>
    </member>
    <member name="P:Notes2022.Server.Entities.ApplicationUser.DisplayName">
      <summary>
   Gets or sets the display name.
   </summary>
      <value>The display name.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.ApplicationUser.TimeZoneID">
      <summary>
   Gets or sets the time zone identifier.
   </summary>
      <value>The time zone identifier.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.ApplicationUser.Ipref0">
      <summary>
   Gets or sets the ipref0.
   </summary>
      <value>The ipref0.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.ApplicationUser.Ipref1">
      <summary>
   Gets or sets the ipref1.
   </summary>
      <value>The ipref1.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.ApplicationUser.Ipref2">
      <summary>
   Gets or sets the ipref2.
   </summary>
      <value>The ipref2.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.ApplicationUser.Ipref3">
      <summary>
   Gets or sets the ipref3.
   </summary>
      <value>The ipref3.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.ApplicationUser.Ipref4">
      <summary>
   Gets or sets the ipref4.
   </summary>
      <value>The ipref4.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.ApplicationUser.Ipref5">
      <summary>
   Gets or sets the ipref5.
   </summary>
      <value>The ipref5.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.ApplicationUser.Ipref6">
      <summary>
   Gets or sets the ipref6.
   </summary>
      <value>The ipref6.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.ApplicationUser.Ipref7">
      <summary>
   Gets or sets the ipref7.
   </summary>
      <value>The ipref7.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.ApplicationUser.Ipref8">
      <summary>
   Gets or sets the ipref8.
   </summary>
      <value>The ipref8.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.ApplicationUser.Ipref9">
      <summary>
   Gets or sets the ipref9.
   </summary>
      <value>The ipref9.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.ApplicationUser.Pref0">
      <summary>
   Gets or sets a value indicating whether this <see cref="T:Notes2022.Server.Entities.ApplicationUser" /> is pref0.
   </summary>
      <value>
        <c>true</c> if pref0; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.ApplicationUser.Pref1">
      <summary>
   Gets or sets a value indicating whether this <see cref="T:Notes2022.Server.Entities.ApplicationUser" /> is pref1.
   </summary>
      <value>
        <c>true</c> if pref1; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.ApplicationUser.Pref2">
      <summary>
   Gets or sets a value indicating whether this <see cref="T:Notes2022.Server.Entities.ApplicationUser" /> is pref2.
   </summary>
      <value>
        <c>true</c> if pref2; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.ApplicationUser.Pref3">
      <summary>
   Gets or sets a value indicating whether this <see cref="T:Notes2022.Server.Entities.ApplicationUser" /> is pref3.
   </summary>
      <value>
        <c>true</c> if pref3; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.ApplicationUser.Pref4">
      <summary>
   Gets or sets a value indicating whether this <see cref="T:Notes2022.Server.Entities.ApplicationUser" /> is pref4.
   </summary>
      <value>
        <c>true</c> if pref4; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.ApplicationUser.Pref5">
      <summary>
   Gets or sets a value indicating whether this <see cref="T:Notes2022.Server.Entities.ApplicationUser" /> is pref5.
   </summary>
      <value>
        <c>true</c> if pref5; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.ApplicationUser.Pref6">
      <summary>
   Gets or sets a value indicating whether this <see cref="T:Notes2022.Server.Entities.ApplicationUser" /> is pref6.
   </summary>
      <value>
        <c>true</c> if pref6; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.ApplicationUser.Pref7">
      <summary>
   Gets or sets a value indicating whether this <see cref="T:Notes2022.Server.Entities.ApplicationUser" /> is pref7.
   </summary>
      <value>
        <c>true</c> if pref7; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.ApplicationUser.Pref8">
      <summary>
   Gets or sets a value indicating whether this <see cref="T:Notes2022.Server.Entities.ApplicationUser" /> is pref8.
   </summary>
      <value>
        <c>true</c> if pref8; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.ApplicationUser.Pref9">
      <summary>
   Gets or sets a value indicating whether this <see cref="T:Notes2022.Server.Entities.ApplicationUser" /> is pref9.
   </summary>
      <value>
        <c>true</c> if pref9; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.ApplicationUser.MyGuid">
      <summary>
   Gets or sets my unique identifier.
   </summary>
      <value>My unique identifier.</value>
    </member>
    <member name="M:Notes2022.Server.Entities.ApplicationUser.GetApplicationUser(GAppUser)">
      <summary>
   Gets the application user.
   </summary>
      <param name="other">The other.</param>
      <returns>ApplicationUser.</returns>
    </member>
    <member name="M:Notes2022.Server.Entities.ApplicationUser.MergeApplicationUser(GAppUser,ApplicationUser)">
      <summary>
   Merges the application user.
   </summary>
      <param name="other">The other.</param>
      <param name="u">The u.</param>
      <returns>ApplicationUser.</returns>
    </member>
    <member name="M:Notes2022.Server.Entities.ApplicationUser.GetGAppUser">
      <summary>
   Gets the g application user.
   </summary>
      <returns>GAppUser.</returns>
    </member>
    <member name="M:Notes2022.Server.Entities.ApplicationUser.GetApplicationUsers(GAppUserList)">
      <summary>
   Gets the application users.
   </summary>
      <param name="other">The other.</param>
      <returns>List&lt;ApplicationUser&gt;.</returns>
    </member>
    <member name="M:Notes2022.Server.Entities.ApplicationUser.GetGAppUserList(List{ApplicationUser})">
      <summary>
   Gets the g application user list.
   </summary>
      <param name="other">The other.</param>
      <returns>GAppUserList.</returns>
    </member>
    <member name="T:Notes2022.Server.Entities.Audit">
      <summary>
   This class defines a table in the database.
   Not currently in use.
   </summary>
    </member>
    <member name="P:Notes2022.Server.Entities.Audit.AuditID">
      <summary>
   Gets or sets the audit identifier.
   </summary>
      <value>The audit identifier.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.Audit.EventType">
      <summary>
   Gets or sets the type of the event.
   </summary>
      <value>The type of the event.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.Audit.UserName">
      <summary>
   Gets or sets the name of the user.
   </summary>
      <value>The name of the user.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.Audit.UserID">
      <summary>
   Gets or sets the user identifier.
   </summary>
      <value>The user identifier.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.Audit.EventTime">
      <summary>
   Gets or sets the event time.
   </summary>
      <value>The event time.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.Audit.Event">
      <summary>
   Gets or sets the event.
   </summary>
      <value>The event.</value>
    </member>
    <member name="T:Notes2022.Server.Entities.HomePageMessage">
      <summary>
   Obsolete
   </summary>
    </member>
    <member name="P:Notes2022.Server.Entities.HomePageMessage.Id">
      <summary>
   Gets or sets the identifier.
   </summary>
      <value>The identifier.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.HomePageMessage.Message">
      <summary>
   Gets or sets the message.
   </summary>
      <value>The message.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.HomePageMessage.Posted">
      <summary>
   Gets or sets the posted.
   </summary>
      <value>The posted.</value>
    </member>
    <member name="T:Notes2022.Server.Entities.LinkedFile">
      <summary>
   This class defines a table in the database.
   It is used to link a file to a file on a remote system
   such that notes written on one system will be transmitted
   to the other.
   </summary>
    </member>
    <member name="P:Notes2022.Server.Entities.LinkedFile.Id">
      <summary>
   Gets or sets the identifier.
   </summary>
      <value>The identifier.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.LinkedFile.HomeFileId">
      <summary>
   Gets or sets the home file identifier.
   </summary>
      <value>The home file identifier.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.LinkedFile.HomeFileName">
      <summary>
   Gets or sets the name of the home file.
   </summary>
      <value>The name of the home file.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.LinkedFile.RemoteFileName">
      <summary>
   Gets or sets the name of the remote file.
   </summary>
      <value>The name of the remote file.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.LinkedFile.RemoteBaseUri">
      <summary>
   Gets or sets the remote base URI.
   </summary>
      <value>The remote base URI.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.LinkedFile.AcceptFrom">
      <summary>
   Gets or sets a value indicating whether [accept from].
   </summary>
      <value>
        <c>true</c> if [accept from]; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.LinkedFile.SendTo">
      <summary>
   Gets or sets a value indicating whether [send to].
   </summary>
      <value>
        <c>true</c> if [send to]; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.LinkedFile.Secret">
      <summary>
   Gets or sets the secret.
   </summary>
      <value>The secret.</value>
    </member>
    <member name="M:Notes2022.Server.Entities.LinkedFile.GetLinkedFile(GLinkedFile)">
      <summary>
   Gets the linked file.
   </summary>
      <param name="other">The other.</param>
      <returns>LinkedFile.</returns>
    </member>
    <member name="M:Notes2022.Server.Entities.LinkedFile.GetGLinkedFile">
      <summary>
   Gets the g linked file.
   </summary>
      <returns>GLinkedFile.</returns>
    </member>
    <member name="M:Notes2022.Server.Entities.LinkedFile.GetSequencerList(GLinkedFileList)">
      <summary>
   Gets the sequencer list.
   </summary>
      <param name="other">The other.</param>
      <returns>List&lt;LinkedFile&gt;.</returns>
    </member>
    <member name="M:Notes2022.Server.Entities.LinkedFile.GetGLinkedFileList(List{LinkedFile})">
      <summary>
   Gets the g linked file list.
   </summary>
      <param name="other">The other.</param>
      <returns>GLinkedFileList.</returns>
    </member>
    <member name="T:Notes2022.Server.Entities.LinkLog">
      <summary>
   This class defines a table in the database.
   Log of link activity.
   </summary>
    </member>
    <member name="P:Notes2022.Server.Entities.LinkLog.Id">
      <summary>
   Gets or sets the identifier.
   </summary>
      <value>The identifier.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.LinkLog.EventType">
      <summary>
   Gets or sets the type of the event.
   </summary>
      <value>The type of the event.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.LinkLog.EventTime">
      <summary>
   Gets or sets the event time.
   </summary>
      <value>The event time.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.LinkLog.Event">
      <summary>
   Gets or sets the event.
   </summary>
      <value>The event.</value>
    </member>
    <member name="M:Notes2022.Server.Entities.LinkLog.GetLinkLog(GLinkLog)">
      <summary>
   Gets the link log.
   </summary>
      <param name="other">The other.</param>
      <returns>LinkLog.</returns>
    </member>
    <member name="M:Notes2022.Server.Entities.LinkLog.GetGLinkLog">
      <summary>
   Gets the g link log.
   </summary>
      <returns>GLinkLog.</returns>
    </member>
    <member name="M:Notes2022.Server.Entities.LinkLog.GetLinkLogList(GLinkLogList)">
      <summary>
   Gets the link log list.
   </summary>
      <param name="other">The other.</param>
      <returns>List&lt;LinkLog&gt;.</returns>
    </member>
    <member name="M:Notes2022.Server.Entities.LinkLog.GetGSequencerList(List{LinkLog})">
      <summary>
   Gets the g sequencer list.
   </summary>
      <param name="other">The other.</param>
      <returns>GLinkLogList.</returns>
    </member>
    <member name="T:Notes2022.Server.Entities.LinkAction">
      <summary>
   Enum LinkAction
   </summary>
    </member>
    <member name="T:Notes2022.Server.Entities.LinkQueue">
      <summary>
   This class defines a table in the database.
   Used to que up items to be linked to remote system.
   </summary>
    </member>
    <member name="F:Notes2022.Server.Entities.LinkAction.CreateBase">
      <summary>
   The create base
   </summary>
    </member>
    <member name="F:Notes2022.Server.Entities.LinkAction.CreateResponse">
      <summary>
   The create response
   </summary>
    </member>
    <member name="F:Notes2022.Server.Entities.LinkAction.Edit">
      <summary>
   The edit
   </summary>
    </member>
    <member name="F:Notes2022.Server.Entities.LinkAction.Delete">
      <summary>
   The delete
   </summary>
    </member>
    <member name="P:Notes2022.Server.Entities.LinkQueue.Id">
      <summary>
   Gets or sets the identifier.
   </summary>
      <value>The identifier.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.LinkQueue.LinkedFileId">
      <summary>
   Gets or sets the linked file identifier.
   </summary>
      <value>The linked file identifier.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.LinkQueue.LinkGuid">
      <summary>
   Gets or sets the link unique identifier.
   </summary>
      <value>The link unique identifier.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.LinkQueue.Activity">
      <summary>
   Gets or sets the activity.
   </summary>
      <value>The activity.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.LinkQueue.BaseUri">
      <summary>
   Gets or sets the base URI.
   </summary>
      <value>The base URI.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.LinkQueue.Enqueued">
      <summary>
   Gets or sets a value indicating whether this <see cref="T:Notes2022.Server.Entities.LinkQueue" /> is enqueued.
   </summary>
      <value>
        <c>true</c> if enqueued; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.LinkQueue.Secret">
      <summary>
   Gets or sets the secret.
   </summary>
      <value>The secret.</value>
    </member>
    <member name="M:Notes2022.Server.Entities.LinkQueue.GetLinkQueue(GLinkQueue)">
      <summary>
   Gets the link queue.
   </summary>
      <param name="other">The other.</param>
      <returns>LinkQueue.</returns>
    </member>
    <member name="M:Notes2022.Server.Entities.LinkQueue.GetGLinkQueue">
      <summary>
   Gets the g link queue.
   </summary>
      <returns>GLinkQueue.</returns>
    </member>
    <member name="M:Notes2022.Server.Entities.LinkQueue.GetSequencerList(GLinkQueueList)">
      <summary>
   Gets the sequencer list.
   </summary>
      <param name="other">The other.</param>
      <returns>List&lt;LinkQueue&gt;.</returns>
    </member>
    <member name="M:Notes2022.Server.Entities.LinkQueue.GetGSequencerList(List{LinkQueue})">
      <summary>
   Gets the g sequencer list.
   </summary>
      <param name="other">The other.</param>
      <returns>GLinkQueueList.</returns>
    </member>
    <member name="T:Notes2022.Server.Entities.Mark">
      <summary>
   Class Mark.
   </summary>
    </member>
    <member name="P:Notes2022.Server.Entities.Mark.UserId">
      <summary>
   Gets or sets the user identifier.
   </summary>
      <value>The user identifier.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.Mark.NoteFileId">
      <summary>
   Gets or sets the note file identifier.
   </summary>
      <value>The note file identifier.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.Mark.ArchiveId">
      <summary>
   Gets or sets the archive identifier.
   </summary>
      <value>The archive identifier.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.Mark.MarkOrdinal">
      <summary>
   Gets or sets the mark ordinal.
   </summary>
      <value>The mark ordinal.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.Mark.NoteOrdinal">
      <summary>
   Gets or sets the note ordinal.
   </summary>
      <value>The note ordinal.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.Mark.NoteHeaderId">
      <summary>
   Gets or sets the note header identifier.
   </summary>
      <value>The note header identifier.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.Mark.ResponseOrdinal">
      <summary>
   Gets or sets the response ordinal.
   </summary>
      <value>The response ordinal.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.Mark.NoteFile">
      <summary>
   Gets or sets the note file.
   </summary>
      <value>The note file.</value>
    </member>
    <member name="T:Notes2022.Server.Entities.NoteAccess">
      <summary>
   This class defines a table in the database.
   Objects of this class are Access Tokens for a file.
   There are a minimum of two for each file:
   1 for the file Owner.
   1 for the unknown "Other" user - if an entry is not
   found for a user, this is the fallback.
   There COULD be one for each user.  But the Other entry is
   usually used for public file and so not too many other entries
   are needed.
   The fields should be self evident.
   </summary>
    </member>
    <member name="P:Notes2022.Server.Entities.NoteAccess.UserID">
      <summary>
   Gets or sets the user identifier.
   </summary>
      <value>The user identifier.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.NoteAccess.NoteFileId">
      <summary>
   Gets or sets the note file identifier.
   </summary>
      <value>The note file identifier.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.NoteAccess.ArchiveId">
      <summary>
   Gets or sets the archive identifier.
   </summary>
      <value>The archive identifier.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.NoteAccess.ReadAccess">
      <summary>
   Gets or sets a value indicating whether [read access].
   </summary>
      <value>
        <c>true</c> if [read access]; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.NoteAccess.Respond">
      <summary>
   Gets or sets a value indicating whether this <see cref="T:Notes2022.Server.Entities.NoteAccess" /> is respond.
   </summary>
      <value>
        <c>true</c> if respond; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.NoteAccess.Write">
      <summary>
   Gets or sets a value indicating whether this <see cref="T:Notes2022.Server.Entities.NoteAccess" /> is write.
   </summary>
      <value>
        <c>true</c> if write; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.NoteAccess.SetTag">
      <summary>
   Gets or sets a value indicating whether [set tag].
   </summary>
      <value>
        <c>true</c> if [set tag]; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.NoteAccess.DeleteEdit">
      <summary>
   Gets or sets a value indicating whether [delete edit].
   </summary>
      <value>
        <c>true</c> if [delete edit]; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.NoteAccess.ViewAccess">
      <summary>
   Gets or sets a value indicating whether [view access].
   </summary>
      <value>
        <c>true</c> if [view access]; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.NoteAccess.EditAccess">
      <summary>
   Gets or sets a value indicating whether [edit access].
   </summary>
      <value>
        <c>true</c> if [edit access]; otherwise, <c>false</c>.</value>
    </member>
    <member name="M:Notes2022.Server.Entities.NoteAccess.GetNoteAccess(GNoteAccess)">
      <summary>
   Gets the note access.
   </summary>
      <param name="other">The other.</param>
      <returns>NoteAccess.</returns>
    </member>
    <member name="M:Notes2022.Server.Entities.NoteAccess.GetGNoteAccess">
      <summary>
   Gets the g note access.
   </summary>
      <returns>GNoteAccess.</returns>
    </member>
    <member name="M:Notes2022.Server.Entities.NoteAccess.GetNoteAccesses(GNoteAccessList)">
      <summary>
   Gets the note accesses.
   </summary>
      <param name="other">The other.</param>
      <returns>List&lt;NoteAccess&gt;.</returns>
    </member>
    <member name="M:Notes2022.Server.Entities.NoteAccess.GetGNoteAccessList(List{NoteAccess})">
      <summary>
   Gets the g note access list.
   </summary>
      <param name="other">The other.</param>
      <returns>GNoteAccessList.</returns>
    </member>
    <member name="T:Notes2022.Server.Entities.NoteContent">
      <summary>
   This class defines a table in the database.
   Each NoteContent object is associated with one NoteHeader
   It contains the "Body" of the note.
   </summary>
    </member>
    <member name="P:Notes2022.Server.Entities.NoteContent.NoteHeaderId">
      <summary>
   Gets or sets the note header identifier.
   </summary>
      <value>The note header identifier.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.NoteContent.NoteBody">
      <summary>
   Gets or sets the note body.
   </summary>
      <value>The note body.</value>
    </member>
    <member name="M:Notes2022.Server.Entities.NoteContent.CloneForLink">
      <summary>
   Clones for link.
   </summary>
      <returns>NoteContent.</returns>
    </member>
    <member name="M:Notes2022.Server.Entities.NoteContent.GetNoteContent(GNoteContent)">
      <summary>
   Gets the content of the note.
   </summary>
      <param name="other">The other.</param>
      <returns>NoteContent.</returns>
    </member>
    <member name="M:Notes2022.Server.Entities.NoteContent.GetGNoteContent">
      <summary>
   Gets the content of the g note.
   </summary>
      <returns>GNoteContent.</returns>
    </member>
    <member name="M:Notes2022.Server.Entities.NoteContent.GetNoteContents(GNoteContentList)">
      <summary>
   Gets the note contents.
   </summary>
      <param name="other">The other.</param>
      <returns>List&lt;NoteContent&gt;.</returns>
    </member>
    <member name="M:Notes2022.Server.Entities.NoteContent.GetGNoteContentList(List{NoteContent})">
      <summary>
   Gets the g note content list.
   </summary>
      <param name="other">The other.</param>
      <returns>GNoteContentList.</returns>
    </member>
    <member name="T:Notes2022.Server.Entities.NoteFile">
      <summary>
   This class defines a table in the database.
   Objects of this class serve as the highest level
   of the hierarchy of the system.  Notes are
   thought the be contained in a file, but are
   in fact are related to it.  Classes directly
   related the a File:
   NoteAccess - Access tokens
   NoteHeader - descriptor for a note
   |-- NoteContent - via a relation to NoteHeader
   |-- Tags - via direct relation and via NoteHeader
   Subscription - a way to get email for new notes
   Sequencer  - a way to keep track of recent notes
   Mark       - a way to mark notes for later output
   See each of these for more detail.
   NoteFiles have a unique integer Id
   NoteFiles have a File Name and a File Title
   The File Naame is case sensitive.
   They are owned by their creator, an Admin.
   They also have a count of the number of archives they
   have and a LastEdited DateTime
   Files can be found by name or Id.
   </summary>
    </member>
    <member name="P:Notes2022.Server.Entities.NoteFile.Id">
      <summary>
   Gets or sets the identifier.
   </summary>
      <value>The identifier.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.NoteFile.NumberArchives">
      <summary>
   Gets or sets the number archives.
   </summary>
      <value>The number archives.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.NoteFile.OwnerId">
      <summary>
   Gets or sets the owner identifier.
   </summary>
      <value>The owner identifier.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.NoteFile.NoteFileName">
      <summary>
   Gets or sets the name of the note file.
   </summary>
      <value>The name of the note file.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.NoteFile.NoteFileTitle">
      <summary>
   Gets or sets the note file title.
   </summary>
      <value>The note file title.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.NoteFile.LastEdited">
      <summary>
   Gets or sets the last edited.
   </summary>
      <value>The last edited.</value>
    </member>
    <member name="M:Notes2022.Server.Entities.NoteFile.GetNoteFile(GNotefile)">
      <summary>
   Gets the note file.
   Conversions between Db Entity space and gRPC space.
   </summary>
      <param name="other">The other.</param>
      <returns>NoteFile.</returns>
    </member>
    <member name="M:Notes2022.Server.Entities.NoteFile.GetGNotefile">
      <summary>
   Gets the g notefile.
   Conversions between Db Entity space and gRPC space.
   </summary>
      <returns>GNotefile.</returns>
    </member>
    <member name="M:Notes2022.Server.Entities.NoteFile.GetNoteFiles(GNotefileList)">
      <summary>
   Gets the note files.
   Conversions between Db Entity space and gRPC space.
   </summary>
      <param name="other">The other.</param>
      <returns>List&lt;NoteFile&gt;.</returns>
    </member>
    <member name="M:Notes2022.Server.Entities.NoteFile.GetGNotefileList(List{NoteFile})">
      <summary>
   Gets the g notefile list.Conversions between Db Entity space and gRPC space.
   </summary>
      <param name="other">The other.</param>
      <returns>GNotefileList.</returns>
    </member>
    <member name="T:Notes2022.Server.Entities.NoteHeader">
      <summary>
   This class defines a table in the database.
   NoteHeader objects are the high level descriptors for a note.
   They contain all the information about a note EXCEPT the
   body, which is contained in related class NoteContent.
   The client index gets the complete set for a given notfile.
   This enables quick display, manipulation, and searching of
   the index.  Each object is related to one file object.
   Fields:
   Id          - The 64 bit unique Identifier for the note.
   NoteFileId  - The file which the note is a part of.
   ArchiveId   - 0 for the main file. Positive for archived notes.
   An Archive is a kind of subfile.
   BaseNoteId  - 0 for base notes. For responses the Id of its parent.
   NoteOrdinal - The number that appears in the index to Id a Base note.
   ResponseOrdinal - The number of a response. 0 for a base note.
   NoteSubject - You guessed it!
   LastEdited  - When the note was last edited
   ThreadLastEdited - When any note in a string was edited
   CreateDate  - DateTime when note was created
   ResponseCount - Only non-zero for a base note
   AuthorID    - UserId of the author
   AuthorName  - friendly name of author
   LinkGuid    - used to tie link notes together
   RefId       - Id of Note user was viewing when they responded
   IsDeleted   - true if the note has been marked as deleted
   Version     - Version Id for edited notes. Current is 0. Older are +
   DirectorMessage - Text message that may head a note.
   A single NoteContent is associated with each NoteHeader.
   </summary>
    </member>
    <member name="P:Notes2022.Server.Entities.NoteHeader.Id">
      <summary>
   Gets or sets the identifier.
   </summary>
      <value>The identifier.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.NoteHeader.NoteFileId">
      <summary>
   Gets or sets the note file identifier.
   </summary>
      <value>The note file identifier.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.NoteHeader.ArchiveId">
      <summary>
   Gets or sets the archive identifier.
   </summary>
      <value>The archive identifier.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.NoteHeader.BaseNoteId">
      <summary>
   Gets or sets the base note identifier.
   </summary>
      <value>The base note identifier.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.NoteHeader.NoteOrdinal">
      <summary>
   Gets or sets the note ordinal.
   </summary>
      <value>The note ordinal.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.NoteHeader.ResponseOrdinal">
      <summary>
   Gets or sets the response ordinal.
   </summary>
      <value>The response ordinal.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.NoteHeader.NoteSubject">
      <summary>
   Gets or sets the note subject.
   </summary>
      <value>The note subject.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.NoteHeader.LastEdited">
      <summary>
   Gets or sets the last edited.
   </summary>
      <value>The last edited.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.NoteHeader.ThreadLastEdited">
      <summary>
   Gets or sets the thread last edited.
   </summary>
      <value>The thread last edited.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.NoteHeader.CreateDate">
      <summary>
   Gets or sets the create date.
   </summary>
      <value>The create date.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.NoteHeader.ResponseCount">
      <summary>
   Gets or sets the response count.
   </summary>
      <value>The response count.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.NoteHeader.AuthorID">
      <summary>
   Gets or sets the author identifier.
   </summary>
      <value>The author identifier.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.NoteHeader.AuthorName">
      <summary>
   Gets or sets the name of the author.
   </summary>
      <value>The name of the author.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.NoteHeader.LinkGuid">
      <summary>
   Gets or sets the link unique identifier.
   </summary>
      <value>The link unique identifier.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.NoteHeader.RefId">
      <summary>
   Gets or sets the reference identifier.
   </summary>
      <value>The reference identifier.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.NoteHeader.IsDeleted">
      <summary>
   Gets or sets a value indicating whether this instance is deleted.
   </summary>
      <value>
        <c>true</c> if this instance is deleted; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.NoteHeader.Version">
      <summary>
   Gets or sets the version.
   </summary>
      <value>The version.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.NoteHeader.DirectorMessage">
      <summary>
   Gets or sets the director message.
   </summary>
      <value>The director message.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.NoteHeader.NoteContent">
      <summary>
   Gets or sets the content of the note.
   </summary>
      <value>The content of the note.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.NoteHeader.Tags">
      <summary>
   Gets or sets the tags.
   </summary>
      <value>The tags.</value>
    </member>
    <member name="M:Notes2022.Server.Entities.NoteHeader.Clone">
      <summary>
   Clones this instance.
   </summary>
      <returns>NoteHeader.</returns>
    </member>
    <member name="M:Notes2022.Server.Entities.NoteHeader.CloneForLink">
      <summary>
   Clones for link.
   </summary>
      <returns>NoteHeader.</returns>
    </member>
    <member name="M:Notes2022.Server.Entities.NoteHeader.CloneForLinkR">
      <summary>
   Clones for link r.
   </summary>
      <returns>NoteHeader.</returns>
    </member>
    <member name="M:Notes2022.Server.Entities.NoteHeader.GetNoteHeader(GNoteHeader)">
      <summary>
   Gets the note header.
   </summary>
      <param name="other">The other.</param>
      <returns>NoteHeader.</returns>
    </member>
    <member name="M:Notes2022.Server.Entities.NoteHeader.GetGNoteHeader">
      <summary>
   Gets the g note header.
   </summary>
      <returns>GNoteHeader.</returns>
    </member>
    <member name="M:Notes2022.Server.Entities.NoteHeader.GetNoteHeaders(GNoteHeaderList)">
      <summary>
   Gets the note headers.
   </summary>
      <param name="other">The other.</param>
      <returns>List&lt;NoteHeader&gt;.</returns>
    </member>
    <member name="M:Notes2022.Server.Entities.NoteHeader.GetGNoteHeaderList(List{NoteHeader})">
      <summary>
   Gets the g note header list.
   </summary>
      <param name="other">The other.</param>
      <returns>GNoteHeaderList.</returns>
    </member>
    <member name="T:Notes2022.Server.Entities.SearchOption">
      <summary>
   Enum SearchOption
   </summary>
    </member>
    <member name="T:Notes2022.Server.Entities.Search">
      <summary>
   Model for searching a notefile
   </summary>
    </member>
    <member name="P:Notes2022.Server.Entities.Search.UserId">
      <summary>
   Gets or sets the user identifier.
   </summary>
      <value>The user identifier.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.Search.Option">
      <summary>
   Gets or sets the option.
   </summary>
      <value>The option.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.Search.Text">
      <summary>
   Gets or sets the text.
   </summary>
      <value>The text.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.Search.Time">
      <summary>
   Gets or sets the time.
   </summary>
      <value>The time.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.Search.NoteFileId">
      <summary>
   Gets or sets the note file identifier.
   </summary>
      <value>The note file identifier.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.Search.ArchiveId">
      <summary>
   Gets or sets the archive identifier.
   </summary>
      <value>The archive identifier.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.Search.BaseOrdinal">
      <summary>
   Gets or sets the base ordinal.
   </summary>
      <value>The base ordinal.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.Search.ResponseOrdinal">
      <summary>
   Gets or sets the response ordinal.
   </summary>
      <value>The response ordinal.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.Search.NoteID">
      <summary>
   Gets or sets the note identifier.
   </summary>
      <value>The note identifier.</value>
    </member>
    <member name="M:Notes2022.Server.Entities.Search.Clone(Search)">
      <summary>
   Clones the specified s.
   </summary>
      <param name="s">The s.</param>
      <returns>Search.</returns>
    </member>
    <member name="T:Notes2022.Server.Entities.Sequencer">
      <summary>
   This class defines a table in the database.
   Object of this class may be associated with a user
   and file to be used to find notes written since the
   "Recent" function was last invoked.
   </summary>
    </member>
    <member name="P:Notes2022.Server.Entities.Sequencer.UserId">
      <summary>
   Gets or sets the user identifier.
   </summary>
      <value>The user identifier.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.Sequencer.NoteFileId">
      <summary>
   Gets or sets the note file identifier.
   </summary>
      <value>The note file identifier.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.Sequencer.Ordinal">
      <summary>
   Gets or sets the ordinal.
   </summary>
      <value>The ordinal.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.Sequencer.LastTime">
      <summary>
   Gets or sets the last time.
   </summary>
      <value>The last time.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.Sequencer.StartTime">
      <summary>
   Gets or sets the start time.
   </summary>
      <value>The start time.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.Sequencer.Active">
      <summary>
   Gets or sets a value indicating whether this <see cref="T:Notes2022.Server.Entities.Sequencer" /> is active.
   </summary>
      <value>
        <c>true</c> if active; otherwise, <c>false</c>.</value>
    </member>
    <member name="M:Notes2022.Server.Entities.Sequencer.GetSequencer(GSequencer)">
      <summary>
   Gets the sequencer.
   </summary>
      <param name="other">The other.</param>
      <returns>Sequencer.</returns>
    </member>
    <member name="M:Notes2022.Server.Entities.Sequencer.GetGSequencer">
      <summary>
   Gets the g sequencer.
   </summary>
      <returns>GSequencer.</returns>
    </member>
    <member name="M:Notes2022.Server.Entities.Sequencer.GetSequencerList(GSequencerList)">
      <summary>
   Gets the sequencer list.
   </summary>
      <param name="other">The other.</param>
      <returns>List&lt;Sequencer&gt;.</returns>
    </member>
    <member name="M:Notes2022.Server.Entities.Sequencer.GetGSequencerList(List{Sequencer})">
      <summary>
   Gets the g sequencer list.
   </summary>
      <param name="other">The other.</param>
      <returns>GSequencerList.</returns>
    </member>
    <member name="T:Notes2022.Server.Entities.SQLFile">
      <summary>
   This class defines a table in the database.
   Not currently in use.
   </summary>
    </member>
    <member name="T:Notes2022.Server.Entities.SQLFileContent">
      <summary>
   This class defines a table in the database.
   Not currently in use.
   </summary>
    </member>
    <member name="P:Notes2022.Server.Entities.SQLFile.FileId">
      <summary>
   Gets or sets the file identifier.
   </summary>
      <value>The file identifier.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.SQLFile.FileName">
      <summary>
   Gets or sets the name of the file.
   </summary>
      <value>The name of the file.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.SQLFile.ContentType">
      <summary>
   Gets or sets the type of the content.
   </summary>
      <value>The type of the content.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.SQLFile.Contributor">
      <summary>
   Gets or sets the contributor.
   </summary>
      <value>The contributor.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.SQLFile.Content">
      <summary>
   Gets or sets the content.
   </summary>
      <value>The content.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.SQLFile.Comments">
      <summary>
   Gets or sets the comments.
   </summary>
      <value>The comments.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.SQLFileContent.SQLFileId">
      <summary>
   Gets or sets the SQL file identifier.
   </summary>
      <value>The SQL file identifier.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.SQLFileContent.SQLFile">
      <summary>
   Gets or sets the SQL file.
   </summary>
      <value>The SQL file.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.SQLFileContent.Content">
      <summary>
   Gets or sets the content.
   </summary>
      <value>The content.</value>
    </member>
    <member name="T:Notes2022.Server.Entities.Subscription">
      <summary>
   This class defines a table in the database.
   Used to associate a user and a file for the purpose of
   forwarding an email when new notes are written.
   </summary>
    </member>
    <member name="P:Notes2022.Server.Entities.Subscription.Id">
      <summary>
   Gets or sets the identifier.
   </summary>
      <value>The identifier.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.Subscription.NoteFileId">
      <summary>
   Gets or sets the note file identifier.
   </summary>
      <value>The note file identifier.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.Subscription.SubscriberId">
      <summary>
   Gets or sets the subscriber identifier.
   </summary>
      <value>The subscriber identifier.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.Subscription.NoteFile">
      <summary>
   Gets or sets the note file.
   </summary>
      <value>The note file.</value>
    </member>
    <member name="T:Notes2022.Server.Entities.SystemMessage">
      <summary>
   Obsolete
   </summary>
    </member>
    <member name="P:Notes2022.Server.Entities.SystemMessage.message">
      <summary>
   Gets or sets the message.
   </summary>
      <value>The message.</value>
    </member>
    <member name="T:Notes2022.Server.Entities.Tags">
      <summary>
   This class defines a table in the database.
   Zero or more of these objects may be associated with each note.
   Defines a simple tag or set of tags for a note.
   </summary>
    </member>
    <member name="P:Notes2022.Server.Entities.Tags.NoteFileId">
      <summary>
   Gets or sets the note file identifier.
   </summary>
      <value>The note file identifier.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.Tags.ArchiveId">
      <summary>
   Gets or sets the archive identifier.
   </summary>
      <value>The archive identifier.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.Tags.NoteHeaderId">
      <summary>
   Gets or sets the note header identifier.
   </summary>
      <value>The note header identifier.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.Tags.Tag">
      <summary>
   Gets or sets the tag.
   </summary>
      <value>The tag.</value>
    </member>
    <member name="M:Notes2022.Server.Entities.Tags.ToString">
      <summary>
   Returns a <see cref="System.String" /> that represents this instance.
   </summary>
      <returns>A <see cref="System.String" /> that represents this instance.</returns>
    </member>
    <member name="M:Notes2022.Server.Entities.Tags.ListToString(List{Tags})">
      <summary>
   Lists to string.
   </summary>
      <param name="list">The list.</param>
      <returns>System.String.</returns>
    </member>
    <member name="M:Notes2022.Server.Entities.Tags.StringToList(System.String)">
      <summary>
   Strings to list.
   </summary>
      <param name="s">The s.</param>
      <returns>List&lt;Tags&gt;.</returns>
    </member>
    <member name="M:Notes2022.Server.Entities.Tags.StringToList(System.String,System.Int64,System.Int32,System.Int32)">
      <summary>
   Strings to list.
   </summary>
      <param name="s">The s.</param>
      <param name="hId">The h identifier.</param>
      <param name="fId">The f identifier.</param>
      <param name="arcId">The arc identifier.</param>
      <returns>List&lt;Tags&gt;.</returns>
    </member>
    <member name="M:Notes2022.Server.Entities.Tags.CloneForLink(List{Tags})">
      <summary>
   Clones for link.
   </summary>
      <param name="inp">The inp.</param>
      <returns>List&lt;Tags&gt;.</returns>
    </member>
    <member name="M:Notes2022.Server.Entities.Tags.GetTags(GTags)">
      <summary>
   Gets the tags.
   </summary>
      <param name="other">The other.</param>
      <returns>Tags.</returns>
    </member>
    <member name="M:Notes2022.Server.Entities.Tags.GetGTags">
      <summary>
   Gets the g tags.
   </summary>
      <returns>GTags.</returns>
    </member>
    <member name="M:Notes2022.Server.Entities.Tags.GetTagsList(GTagsList)">
      <summary>
   Gets the tags list.
   </summary>
      <param name="other">The other.</param>
      <returns>List&lt;Tags&gt;.</returns>
    </member>
    <member name="M:Notes2022.Server.Entities.Tags.GetGTagsList(List{Tags})">
      <summary>
   Gets the g tags list.
   </summary>
      <param name="other">The other.</param>
      <returns>GTagsList.</returns>
    </member>
    <member name="T:Notes2022.Server.Entities.TZone">
      <summary>
   Obsolete with Blazor WASM
   </summary>
    </member>
    <member name="P:Notes2022.Server.Entities.TZone.Id">
      <summary>
   Gets or sets the identifier.
   </summary>
      <value>The identifier.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.TZone.Name">
      <summary>
   Gets or sets the name.
   </summary>
      <value>The name.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.TZone.Abbreviation">
      <summary>
   Gets or sets the abbreviation.
   </summary>
      <value>The abbreviation.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.TZone.Offset">
      <summary>
   Gets or sets the offset.
   </summary>
      <value>The offset.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.TZone.OffsetHours">
      <summary>
   Gets or sets the offset hours.
   </summary>
      <value>The offset hours.</value>
    </member>
    <member name="P:Notes2022.Server.Entities.TZone.OffsetMinutes">
      <summary>
   Gets or sets the offset minutes.
   </summary>
      <value>The offset minutes.</value>
    </member>
    <member name="M:Notes2022.Server.Entities.TZone.Local(DateTime)">
      <summary>
   Locals the specified dt.
   </summary>
      <param name="dt">The dt.</param>
      <returns>DateTime.</returns>
    </member>
    <member name="M:Notes2022.Server.Entities.TZone.Universal(DateTime)">
      <summary>
   Universals the specified dt.
   </summary>
      <param name="dt">The dt.</param>
      <returns>DateTime.</returns>
    </member>
    <member name="T:Notes2022.Shared.UserData">
      <summary>
   This class does NOT define a table in the database!
   It is a local mirror of the extra data fields added to the
   ApplicationUser.
   </summary>
    </member>
    <member name="P:Notes2022.Shared.UserData.UserId">
      <summary>
   Gets or sets the user identifier.
   </summary>
      <value>The user identifier.</value>
    </member>
    <member name="P:Notes2022.Shared.UserData.DisplayName">
      <summary>
   Gets or sets the display name.
   </summary>
      <value>The display name.</value>
    </member>
    <member name="P:Notes2022.Shared.UserData.DisplayName2">
      <summary>
   Gets the display name2.
   </summary>
      <value>The display name2.</value>
    </member>
    <member name="P:Notes2022.Shared.UserData.Email">
      <summary>
   Gets or sets the email.
   </summary>
      <value>The email.</value>
    </member>
    <member name="P:Notes2022.Shared.UserData.TimeZoneID">
      <summary>
   Gets or sets the time zone identifier.
   </summary>
      <value>The time zone identifier.</value>
    </member>
    <member name="P:Notes2022.Shared.UserData.Ipref0">
      <summary>
   Gets or sets the ipref0.
   </summary>
      <value>The ipref0.</value>
    </member>
    <member name="P:Notes2022.Shared.UserData.Ipref1">
      <summary>
   Gets or sets the ipref1.
   </summary>
      <value>The ipref1.</value>
    </member>
    <member name="P:Notes2022.Shared.UserData.Ipref2">
      <summary>
   Gets or sets the ipref2.
   </summary>
      <value>The ipref2.</value>
    </member>
    <member name="P:Notes2022.Shared.UserData.Ipref3">
      <summary>
   Gets or sets the ipref3.
   </summary>
      <value>The ipref3.</value>
    </member>
    <member name="P:Notes2022.Shared.UserData.Ipref4">
      <summary>
   Gets or sets the ipref4.
   </summary>
      <value>The ipref4.</value>
    </member>
    <member name="P:Notes2022.Shared.UserData.Ipref5">
      <summary>
   Gets or sets the ipref5.
   </summary>
      <value>The ipref5.</value>
    </member>
    <member name="P:Notes2022.Shared.UserData.Ipref6">
      <summary>
   Gets or sets the ipref6.
   </summary>
      <value>The ipref6.</value>
    </member>
    <member name="P:Notes2022.Shared.UserData.Ipref7">
      <summary>
   Gets or sets the ipref7.
   </summary>
      <value>The ipref7.</value>
    </member>
    <member name="P:Notes2022.Shared.UserData.Ipref8">
      <summary>
   Gets or sets the ipref8.
   </summary>
      <value>The ipref8.</value>
    </member>
    <member name="P:Notes2022.Shared.UserData.Ipref9">
      <summary>
   Gets or sets the ipref9.
   </summary>
      <value>The ipref9.</value>
    </member>
    <member name="P:Notes2022.Shared.UserData.Pref0">
      <summary>
   Gets or sets a value indicating whether this <see cref="T:Notes2022.Shared.UserData" /> is pref0.
   </summary>
      <value>
        <c>true</c> if pref0; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:Notes2022.Shared.UserData.Pref1">
      <summary>
   Gets or sets a value indicating whether this <see cref="T:Notes2022.Shared.UserData" /> is pref1.
   </summary>
      <value>
        <c>true</c> if pref1; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:Notes2022.Shared.UserData.Pref2">
      <summary>
   Gets or sets a value indicating whether this <see cref="T:Notes2022.Shared.UserData" /> is pref2.
   </summary>
      <value>
        <c>true</c> if pref2; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:Notes2022.Shared.UserData.Pref3">
      <summary>
   Gets or sets a value indicating whether this <see cref="T:Notes2022.Shared.UserData" /> is pref3.
   </summary>
      <value>
        <c>true</c> if pref3; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:Notes2022.Shared.UserData.Pref4">
      <summary>
   Gets or sets a value indicating whether this <see cref="T:Notes2022.Shared.UserData" /> is pref4.
   </summary>
      <value>
        <c>true</c> if pref4; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:Notes2022.Shared.UserData.Pref5">
      <summary>
   Gets or sets a value indicating whether this <see cref="T:Notes2022.Shared.UserData" /> is pref5.
   </summary>
      <value>
        <c>true</c> if pref5; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:Notes2022.Shared.UserData.Pref6">
      <summary>
   Gets or sets a value indicating whether this <see cref="T:Notes2022.Shared.UserData" /> is pref6.
   </summary>
      <value>
        <c>true</c> if pref6; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:Notes2022.Shared.UserData.Pref7">
      <summary>
   Gets or sets a value indicating whether this <see cref="T:Notes2022.Shared.UserData" /> is pref7.
   </summary>
      <value>
        <c>true</c> if pref7; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:Notes2022.Shared.UserData.Pref8">
      <summary>
   Gets or sets a value indicating whether this <see cref="T:Notes2022.Shared.UserData" /> is pref8.
   </summary>
      <value>
        <c>true</c> if pref8; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:Notes2022.Shared.UserData.Pref9">
      <summary>
   Gets or sets a value indicating whether this <see cref="T:Notes2022.Shared.UserData" /> is pref9.
   </summary>
      <value>
        <c>true</c> if pref9; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:Notes2022.Shared.UserData.MyGuid">
      <summary>
   Gets or sets my unique identifier.
   </summary>
      <value>My unique identifier.</value>
    </member>
    <member name="T:Notes2022.Server.AccessManager">
      <summary>
   Class AccessManager.
   </summary>
    </member>
    <member name="M:Notes2022.Server.AccessManager.CreateBaseEntries(NotesDbContext,System.String,System.Int32)">
      <summary>
   Create standard starting entires for a access controls for a new file.
   "Other" -- no access
   creating user (Admin) -- Full Access
   </summary>
      <param name="db">The database.</param>
      <param name="userManager">The user manager.</param>
      <param name="userId">The user identifier.</param>
      <param name="fileId">The file identifier.</param>
      <returns>
        <c>true</c> if XXXX, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:Notes2022.Server.AccessManager.GetAccess(NotesDbContext,System.String,System.Int32,System.Int32)">
      <summary>
   All access checks call this.
   </summary>
      <param name="db">NotesDbContext</param>
      <param name="userId">ID of logged in user</param>
      <param name="fileId">NoteFileID</param>
      <param name="arcId">The arc identifier.</param>
      <returns>NoteAcess Object</returns>
    </member>
    <member name="M:Notes2022.Server.AccessManager.GetOneAccess(NotesDbContext,System.String,System.Int32,System.Int32)">
      <summary>
   Get Users Specific Access Entry
   </summary>
      <param name="db">NotesDbContext</param>
      <param name="userId">ID of logged in user</param>
      <param name="fileId">NoteFileID</param>
      <param name="arcId">The arc identifier.</param>
      <returns>NoteAcess Object</returns>
    </member>
    <member name="M:Notes2022.Server.AccessManager.GetAccessListForFile(NotesDbContext,System.Int32,System.Int32)">
      <summary>
   Gets the access list for file.
   </summary>
      <param name="db">The database.</param>
      <param name="fileId">The file identifier.</param>
      <param name="arcId">The arc identifier.</param>
      <returns>List&lt;NoteAccess&gt;.</returns>
    </member>
    <member name="M:Notes2022.Server.AccessManager.TestLinkAccess(NotesDbContext,NoteFile,System.String)">
      <summary>
   Tests the link access.
   </summary>
      <param name="NotesDbContext">The notes database context.</param>
      <param name="noteFile">The note file.</param>
      <param name="secret">The secret.</param>
      <returns>
        <c>true</c> if XXXX, <c>false</c> otherwise.</returns>
    </member>
    <member name="T:Notes2022.Server.Importer">
      <summary> Does the import of a text file from an old plato/novanet system notefile There be messy stuff in here!!! </summary>
    </member>
    <member name="M:Notes2022.Server.Importer.Import(NotesDbContext,System.String,System.String)">
      <summary>
   Imports the specified database.
   </summary>
      <param name="_db">The database.</param>
      <param name="myFileInput">My file input.</param>
      <param name="myNotesFile">My notes file.</param>
      <returns>
        <c>true</c> if XXXX, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:Notes2022.Server.Importer.CheckFf(System.String,StreamReader)">
      <summary>
   Process NovaNET formfeed - we need to eat some lines
   </summary>
      <param name="inline">input line</param>
      <param name="file">StreamReader for import file</param>
      <returns>System.String.</returns>
    </member>
    <member name="M:Notes2022.Server.Importer.GetBaseNoteHeader(NotesDbContext,NoteHeader)">
      <summary>
   Get the BaseNoteHeader for a NoteContent
   </summary>
      <param name="_db">The database.</param>
      <param name="nc">NoteContent</param>
      <returns>NoteHeader.</returns>
    </member>
    <member name="M:Notes2022.Server.Importer.Output(System.String)">
      <summary>
   Outputs the specified message.
   </summary>
      <param name="message">The message.</param>
    </member>
    <member name="T:Notes2022.Server.NoteDataManager">
      <summary>
   Class NoteDataManager.
   </summary>
    </member>
    <member name="M:Notes2022.Server.NoteDataManager.CreateNoteFile(NotesDbContext,System.String,System.String,System.String)">
      <summary>
   Create a NoteFile
   </summary>
      <param name="db">NotesDbContext</param>
      <param name="userId">UserID of creator</param>
      <param name="name">NoteFile name</param>
      <param name="title">NoteFile title</param>
      <returns>
        <c>true</c> if XXXX, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:Notes2022.Server.NoteDataManager.CreateNote(NotesDbContext,NoteHeader,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
   Create a new note
   </summary>
      <param name="db">Database</param>
      <param name="nh">NoteHeader for new note</param>
      <param name="body">Note content</param>
      <param name="tags">the tags</param>
      <param name="dMessage">Director message (hold over from when it was not in header...)</param>
      <param name="send">Should we send emails? / Is this an Imported note?</param>
      <param name="linked">Are we processing linked file?</param>
      <param name="editing">Are we editing?</param>
      <returns>NoteHeader.</returns>
    </member>
    <member name="M:Notes2022.Server.NoteDataManager.CreateResponse(NotesDbContext,NoteHeader,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
   Create a new Response - See CreateNote for params
   </summary>
      <param name="db">The database.</param>
      <param name="nh">The nh.</param>
      <param name="body">The body.</param>
      <param name="tags">The tags.</param>
      <param name="dMessage">The d message.</param>
      <param name="send">if set to <c>true</c> [send].</param>
      <param name="linked">if set to <c>true</c> [linked].</param>
      <param name="editing">if set to <c>true</c> [editing].</param>
      <returns>NoteHeader.</returns>
    </member>
    <member name="M:Notes2022.Server.NoteDataManager.DeleteNote(NotesDbContext,NoteHeader)">
      <summary>
   Delete a Note
   </summary>
      <param name="_db">The database.</param>
      <param name="nh">The nh.</param>
    </member>
    <member name="M:Notes2022.Server.NoteDataManager.EditNote(NotesDbContext,UserManager{ApplicationUser},NoteHeader,NoteContent,System.String)">
      <summary>
   Delete a linked note - NOT called now...
   </summary>
      <param name="db">The database.</param>
      <param name="userManager">The user manager.</param>
      <param name="nh">The nh.</param>
      <param name="nc">The nc.</param>
      <param name="tags">The tags.</param>
      <returns>NoteHeader.</returns>
    </member>
    <member name="M:Notes2022.Server.NoteDataManager.GetFileByName(NotesDbContext,System.String)">
      <summary>
   Copy user prefs from ApplicationUser to UserData entity
   </summary>
      <param name="db">The database.</param>
      <param name="fname">The fname.</param>
      <returns>UserData.</returns>
    </member>
    <member name="M:Notes2022.Server.NoteDataManager.NextBaseNoteOrdinal(NotesDbContext,System.Int32,System.Int32)">
      <summary>
   Get next available BaseNoteOrdinal
   </summary>
      <param name="db">NotesDbContext</param>
      <param name="noteFileId">NoteFileID</param>
      <param name="arcId">The arc identifier.</param>
      <returns>System.Int32.</returns>
    </member>
    <member name="M:Notes2022.Server.NoteDataManager.GetFileById(NotesDbContext,System.Int32)">
      <summary>
   Get notefile entity from its Id
   </summary>
      <param name="db">The database.</param>
      <param name="id">The identifier.</param>
      <returns>NoteFile.</returns>
    </member>
    <member name="M:Notes2022.Server.NoteDataManager.GetNoteByIdWithFile(NotesDbContext,System.Int64)">
      <summary>
   No Longer includes NoteFile but does include NoteContent
   </summary>
      <param name="db">The database.</param>
      <param name="noteid">The noteid.</param>
      <returns>NoteHeader.</returns>
    </member>
    <member name="M:Notes2022.Server.NoteDataManager.GetBaseNoteHeader(NotesDbContext,System.Int64)">
      <summary>
   Get a NoteHeader given its Id
   </summary>
      <param name="db">The database.</param>
      <param name="id">The identifier.</param>
      <returns>NoteHeader.</returns>
    </member>
    <member name="M:Notes2022.Server.NoteDataManager.GetBaseNoteHeader(NotesDbContext,System.Int32,System.Int32,System.Int32)">
      <summary>
   Get the BaseNoteHeader for a Note
   </summary>
      <param name="db">NotesDbContext</param>
      <param name="fileId">fileid</param>
      <param name="arcId">The arc identifier.</param>
      <param name="noteOrd">noteordinal</param>
      <returns>List&lt;NoteHeader&gt;.</returns>
    </member>
    <member name="M:Notes2022.Server.NoteDataManager.GetBaseNoteHeaderById(NotesDbContext,System.Int64)">
      <summary>
   Get a list of all Notes in a string/thread
   </summary>
      <param name="db">NotesDbContext</param>
      <param name="id">The identifier.</param>
      <returns>NoteHeader.</returns>
    </member>
    <member name="T:Notes2022.Server.Migrations.first">
      <summary> Class first. Implements the <see cref="Migration" /></summary>
      <seealso cref="Migration" />
    </member>
    <member name="T:Notes2022.Server.Pages.ErrorModel">
      <summary>
   Class ErrorModel.
   Implements the <see cref="PageModel" /></summary>
      <seealso cref="PageModel" />
    </member>
    <member name="P:Notes2022.Server.Pages.ErrorModel.RequestId">
      <summary>
   Gets or sets the request identifier.
   </summary>
      <value>The request identifier.</value>
    </member>
    <member name="P:Notes2022.Server.Pages.ErrorModel.ShowRequestId">
      <summary>
   Gets a value indicating whether [show request identifier].
   </summary>
      <value>
        <c>true</c> if [show request identifier]; otherwise, <c>false</c>.</value>
    </member>
    <member name="M:Notes2022.Server.Pages.ErrorModel.#ctor(ILogger{ErrorModel})">
      <summary>
   Initializes a new instance of the <see cref="T:Notes2022.Server.Pages.ErrorModel" /> class.
   </summary>
      <param name="logger">The logger.</param>
    </member>
    <member name="M:Notes2022.Server.Pages.ErrorModel.OnGet">
      <summary>
   Called when [get].
   </summary>
    </member>
    <member name="T:Notes2022.Server.Services.EmailSender">
      <summary>
   Class EmailSender.
   Implements the <see cref="IEmailSender" /></summary>
      <seealso cref="IEmailSender" />
    </member>
    <member name="T:Notes2022.Server.Services.AuthMessageSenderOptions">
      <summary>
   Class AuthMessageSenderOptions.
   </summary>
    </member>
    <member name="M:Notes2022.Server.Services.EmailSender.#ctor(IOptions{AuthMessageSenderOptions})">
      <summary>
   Initializes a new instance of the <see cref="T:Notes2022.Server.Services.EmailSender" /> class.
   </summary>
      <param name="optionsAccessor">The options accessor.</param>
    </member>
    <member name="M:Notes2022.Server.Services.EmailSender.#ctor">
      <summary>
   Initializes a new instance of the <see cref="T:Notes2022.Server.Services.EmailSender" /> class.
   </summary>
    </member>
    <member name="P:Notes2022.Server.Services.EmailSender.Options">
      <summary>
   Gets the options.
   </summary>
      <value>The options.</value>
    </member>
    <member name="M:Notes2022.Server.Services.EmailSender.SendEmailAsync(System.String,System.String,System.String)">
      <summary>
   Send email as an asynchronous operation.
   </summary>
      <param name="email">The email.</param>
      <param name="subject">The subject.</param>
      <param name="message">The message.</param>
      <returns>A Task representing the asynchronous operation.</returns>
    </member>
    <member name="P:Notes2022.Server.Services.AuthMessageSenderOptions.SendGridKey">
      <summary>
   Gets or sets the send grid key.
   </summary>
      <value>The send grid key.</value>
    </member>
    <member name="T:Notes2022.Server.Services.LocalService">
      <summary>
   Class LocalService.
   </summary>
    </member>
    <member name="M:Notes2022.Server.Services.LocalService.MakeNoteForEmail(ForwardViewModel,GNotefile,NotesDbContext,System.String,System.String)">
      <summary>
   Makes the note for email.
   </summary>
      <param name="fv">The fv.</param>
      <param name="NoteFile">The note file.</param>
      <param name="db">The database.</param>
      <param name="email">The email.</param>
      <param name="name">The name.</param>
      <returns>System.String.</returns>
    </member>
    <member name="T:Notes2022.Server.Services.Notes2022Service">
      <summary>
   Class Notes2022Service.  Contaims all the Notes2022 gRPC service methods/handlers.
   Implements the <see cref="Notes2022.Proto.Notes2022Server.Notes2022ServerBase" /></summary>
      <seealso cref="Notes2022.Proto.Notes2022Server.Notes2022ServerBase" />
    </member>
    <member name="M:Notes2022.Server.Services.Notes2022Service.#ctor(ILogger{Notes2022Service},NotesDbContext,IConfiguration,RoleManager{IdentityRole},SignInManager{ApplicationUser},IEmailSender,UserManager{ApplicationUser})">
      <summary>
   Initializes a new instance of the <see cref="T:Notes2022.Server.Services.Notes2022Service" /> class.
   </summary>
      <param name="logger">The logger.</param>
      <param name="db">The database.</param>
      <param name="configuration">The configuration.</param>
      <param name="roleManager">The role manager.</param>
      <param name="signInManager">The sign in manager.</param>
      <param name="emailSender">The email sender.</param>
      <param name="userManager">The user manager.</param>
    </member>
    <member name="M:Notes2022.Server.Services.Notes2022Service.Register(RegisterRequest,ServerCallContext)">
      <summary>
   Registers the specified User.
   </summary>
      <param name="request">The request.</param>
      <param name="context">The context.</param>
      <returns>AuthReply.</returns>
    </member>
    <member name="M:Notes2022.Server.Services.Notes2022Service.ConfirmEmail(ConfirmEmailRequest,ServerCallContext)">
      <summary>
   Confirms the email account of the user.
   </summary>
      <param name="request">The request.</param>
      <param name="context">The context.</param>
      <returns>AuthReply.</returns>
    </member>
    <member name="M:Notes2022.Server.Services.Notes2022Service.Login(LoginRequest,ServerCallContext)">
      <summary>
   Logins the specified User.
   </summary>
      <param name="request">The request.</param>
      <param name="context">The context.</param>
      <returns>LoginReply.</returns>
    </member>
    <member name="M:Notes2022.Server.Services.Notes2022Service.Logout(NoRequest,ServerCallContext)">
      <summary>
   Logouts the current User.
   </summary>
      <param name="request">The request.</param>
      <param name="context">The context.</param>
      <returns>AuthReply.</returns>
    </member>
    <member name="M:Notes2022.Server.Services.Notes2022Service.GetUserList(NoRequest,ServerCallContext)">
      <summary>
   Gets the list of all Users
   </summary>
      <param name="request">The request.</param>
      <param name="context">The context.</param>
      <returns>GAppUserList.</returns>
    </member>
    <member name="M:Notes2022.Server.Services.Notes2022Service.GetUserRoles(AppUserRequest,ServerCallContext)">
      <summary>
   Gets the user roles.
   </summary>
      <param name="request">The request.</param>
      <param name="context">The context.</param>
      <returns>EditUserViewModel.</returns>
    </member>
    <member name="M:Notes2022.Server.Services.Notes2022Service.UpdateUserRoles(EditUserViewModel,ServerCallContext)">
      <summary>
   Updates the user roles.
   </summary>
      <param name="model">The model.</param>
      <param name="context">The context.</param>
      <returns>NoRequest.</returns>
    </member>
    <member name="M:Notes2022.Server.Services.Notes2022Service.CreateNoteFile(GNotefile,ServerCallContext)">
      <summary>
   Creates a note file.
   </summary>
      <param name="request">The request.</param>
      <param name="context">The context.</param>
      <returns>System.Nullable&lt;GNotefile&gt;.</returns>
    </member>
    <member name="M:Notes2022.Server.Services.Notes2022Service.GetHomePageModel(NoRequest,ServerCallContext)">
      <summary>
   Gets the home page model.
   </summary>
      <param name="request">The request.</param>
      <param name="context">The context.</param>
      <returns>HomePageModel.</returns>
    </member>
    <member name="M:Notes2022.Server.Services.Notes2022Service.GetAdminPageModel(NoRequest,ServerCallContext)">
      <summary>
   Gets the admin page model.
   </summary>
      <param name="request">The request.</param>
      <param name="context">The context.</param>
      <returns>HomePageModel.</returns>
    </member>
    <member name="M:Notes2022.Server.Services.Notes2022Service.UpdateNoteFile(GNotefile,ServerCallContext)">
      <summary>
   Updates the note file.
   </summary>
      <param name="noteFile">The note file.</param>
      <param name="context">The context.</param>
      <returns>GNotefile.</returns>
    </member>
    <member name="M:Notes2022.Server.Services.Notes2022Service.DeleteNoteFile(GNotefile,ServerCallContext)">
      <summary>
   Deletes the note file.
   </summary>
      <param name="noteFile">The note file.</param>
      <param name="context">The context.</param>
      <returns>NoRequest.</returns>
    </member>
    <member name="M:Notes2022.Server.Services.Notes2022Service.Import(ImportRequest,ServerCallContext)">
      <summary>
   Imports the specified request.
   </summary>
      <param name="request">The request.</param>
      <param name="context">The context.</param>
      <returns>NoRequest.</returns>
    </member>
    <member name="M:Notes2022.Server.Services.Notes2022Service.GetNoteFileIndexData(NoteIndexRequest,ServerCallContext)">
      <summary>
   Gets the note file index data.
   </summary>
      <param name="request">The request.</param>
      <param name="context">The context.</param>
      <returns>NoteDisplayIndexModel.</returns>
    </member>
    <member name="M:Notes2022.Server.Services.Notes2022Service.GetNoteContent(DisplayModelRequest,ServerCallContext)">
      <summary>
   Gets the content of the note.
   </summary>
      <param name="request">The request.</param>
      <param name="context">The context.</param>
      <returns>DisplayModel.</returns>
    </member>
    <member name="M:Notes2022.Server.Services.Notes2022Service.GetAccessList(AccessAndUserListRequest,ServerCallContext)">
      <summary>
   Gets the access list.
   </summary>
      <param name="request">The request.</param>
      <param name="context">The context.</param>
      <returns>GNoteAccessList.</returns>
    </member>
    <member name="M:Notes2022.Server.Services.Notes2022Service.GetAccessAndUserList(AccessAndUserListRequest,ServerCallContext)">
      <summary>
   Gets the access and user list.
   </summary>
      <param name="request">The request.</param>
      <param name="context">The context.</param>
      <returns>AccessAndUserList.</returns>
    </member>
    <member name="M:Notes2022.Server.Services.Notes2022Service.UpdateAccessItem(GNoteAccess,ServerCallContext)">
      <summary>
   Updates the access item.
   </summary>
      <param name="request">The request.</param>
      <param name="context">The context.</param>
      <returns>GNoteAccess.</returns>
    </member>
    <member name="M:Notes2022.Server.Services.Notes2022Service.DeleteAccessItem(GNoteAccess,ServerCallContext)">
      <summary>
   Deletes the access item.
   </summary>
      <param name="request">The request.</param>
      <param name="context">The context.</param>
      <returns>NoRequest.</returns>
    </member>
    <member name="M:Notes2022.Server.Services.Notes2022Service.AddAccessItem(GNoteAccess,ServerCallContext)">
      <summary>
   Adds an access item.
   </summary>
      <param name="request">The request.</param>
      <param name="context">The context.</param>
      <returns>GNoteAccess.</returns>
    </member>
    <member name="M:Notes2022.Server.Services.Notes2022Service.GetUserData(NoRequest,ServerCallContext)">
      <summary>
   Gets the user data.
   </summary>
      <param name="request">The request.</param>
      <param name="context">The context.</param>
      <returns>GAppUser.</returns>
    </member>
    <member name="M:Notes2022.Server.Services.Notes2022Service.UpdateUserData(GAppUser,ServerCallContext)">
      <summary>
   Updates the user data.
   </summary>
      <param name="request">The request.</param>
      <param name="context">The context.</param>
      <returns>GAppUser.</returns>
    </member>
    <member name="M:Notes2022.Server.Services.Notes2022Service.GetVersions(GetVersionsRequest,ServerCallContext)">
      <summary>
   Gets the versions.
   </summary>
      <param name="request">The request.</param>
      <param name="context">The context.</param>
      <returns>GNoteHeaderList.</returns>
    </member>
    <member name="M:Notes2022.Server.Services.Notes2022Service.GetSequencer(NoRequest,ServerCallContext)">
      <summary>
   Gets the sequencer list.
   </summary>
      <param name="request">The request.</param>
      <param name="context">The context.</param>
      <returns>GSequencerList.</returns>
    </member>
    <member name="M:Notes2022.Server.Services.Notes2022Service.CreateSequencer(SCheckModel,ServerCallContext)">
      <summary>
   Creates the sequencer item.
   </summary>
      <param name="request">The request.</param>
      <param name="context">The context.</param>
      <returns>NoRequest.</returns>
    </member>
    <member name="M:Notes2022.Server.Services.Notes2022Service.DeleteSequencer(SCheckModel,ServerCallContext)">
      <summary>
   Deletes the sequencer item.
   </summary>
      <param name="request">The request.</param>
      <param name="context">The context.</param>
      <returns>NoRequest.</returns>
    </member>
    <member name="M:Notes2022.Server.Services.Notes2022Service.UpdateSequencerOrdinal(GSequencer,ServerCallContext)">
      <summary>
   Updates the sequencer item ordinal.
   </summary>
      <param name="request">The request.</param>
      <param name="context">The context.</param>
      <returns>NoRequest.</returns>
    </member>
    <member name="M:Notes2022.Server.Services.Notes2022Service.UpdateSequencer(GSequencer,ServerCallContext)">
      <summary>
   Updates the sequencer item.
   </summary>
      <param name="request">The request.</param>
      <param name="context">The context.</param>
      <returns>NoRequest.</returns>
    </member>
    <member name="M:Notes2022.Server.Services.Notes2022Service.GetNoteFile(NoteIndexRequest,ServerCallContext)">
      <summary>
   Gets the note file.
   </summary>
      <param name="request">The request.</param>
      <param name="context">The context.</param>
      <returns>GNotefile.</returns>
    </member>
    <member name="M:Notes2022.Server.Services.Notes2022Service.CreateNewNote(TextViewModel,ServerCallContext)">
      <summary>
   Creates the new note.
   </summary>
      <param name="tvm">The TVM.</param>
      <param name="context">The context.</param>
      <returns>GNoteHeader.</returns>
    </member>
    <member name="M:Notes2022.Server.Services.Notes2022Service.UpdateNote(TextViewModel,ServerCallContext)">
      <summary>
   Updates the note.
   </summary>
      <param name="tvm">The TVM.</param>
      <param name="context">The context.</param>
      <returns>GNoteHeader.</returns>
    </member>
    <member name="M:Notes2022.Server.Services.Notes2022Service.GetHeaderForNoteId(NoteId,ServerCallContext)">
      <summary>
   Gets the header for note identifier.
   </summary>
      <param name="request">The request.</param>
      <param name="context">The context.</param>
      <returns>GNoteHeader.</returns>
    </member>
    <member name="M:Notes2022.Server.Services.Notes2022Service.GetAbout(NoRequest,ServerCallContext)">
      <summary>
   Gets the about.
   </summary>
      <param name="request">The request.</param>
      <param name="context">The context.</param>
      <returns>AboutModel.</returns>
    </member>
    <member name="M:Notes2022.Server.Services.Notes2022Service.SendEmail(GEmail,ServerCallContext)">
      <summary>
   Send an email.
   unauthenticated - slower - use it too much and it really hurts you!
   </summary>
      <param name="request">The request received from the client.</param>
      <param name="context">The context of the server-side call handler being invoked.</param>
      <returns>The response to send back to the client (wrapped by a task).</returns>
    </member>
    <member name="M:Notes2022.Server.Services.Notes2022Service.SendEmailAuth(GEmail,ServerCallContext)">
      <summary>
   Send email authenticated.
   </summary>
      <param name="request">The request received from the client.</param>
      <param name="context">The context of the server-side call handler being invoked.</param>
      <returns>The response to send back to the client (wrapped by a task).</returns>
    </member>
    <member name="M:Notes2022.Server.Services.Notes2022Service.GetExport(ExportRequest,ServerCallContext)">
      <summary>
   Gets the export info for phase 1.
   </summary>
      <param name="request">The request.</param>
      <param name="context">The context.</param>
      <returns>GNoteHeaderList.</returns>
    </member>
    <member name="M:Notes2022.Server.Services.Notes2022Service.GetExport2(NoteId,ServerCallContext)">
      <summary>
   Gets the export info for phase 2. (note content)
   </summary>
      <param name="request">The request.</param>
      <param name="context">The context.</param>
      <returns>GNoteContent.</returns>
    </member>
    <member name="M:Notes2022.Server.Services.Notes2022Service.DoForward(ForwardViewModel,ServerCallContext)">
      <summary>
   Does the forward of note(s) to an email address.
   </summary>
      <param name="fv">The fv.</param>
      <param name="context">The context.</param>
      <returns>NoRequest.</returns>
    </member>
    <member name="M:Notes2022.Server.Services.Notes2022Service.GetNoteFilesOrderedByName(NoRequest,ServerCallContext)">
      <summary>
   Gets the note files ordered by name.
   </summary>
      <param name="request">The request.</param>
      <param name="context">The context.</param>
      <returns>GNotefileList.</returns>
    </member>
    <member name="M:Notes2022.Server.Services.Notes2022Service.CopyNote(CopyModel,ServerCallContext)">
      <summary>
   Copies note(s) from one file to another
   </summary>
      <param name="Model">The model.</param>
      <param name="context">The context.</param>
      <returns>NoRequest.</returns>
    </member>
    <member name="M:Notes2022.Server.Services.Notes2022Service.DeleteNote(NoteId,ServerCallContext)">
      <summary>
   Deletes the note.
   </summary>
      <param name="request">The request.</param>
      <param name="context">The context.</param>
      <returns>NoRequest.</returns>
    </member>
    <member name="M:Notes2022.Server.Services.Notes2022Service.GetExportJson(ExportRequest,ServerCallContext)">
      <summary>
   Gets the export json.
   </summary>
      <param name="request">The request.</param>
      <param name="context">The context.</param>
      <returns>JsonExport.</returns>
    </member>
    <member name="M:Notes2022.Server.Services.Notes2022Service.GetTextFile(AString,ServerCallContext)">
      <summary>
   Gets text from server for display in client.
   files: about.html | help.html | helpdialog.html | helpdialog2.html | license.html
   </summary>
      <param name="request">The request received from the client.</param>
      <param name="context">The context of the server-side call handler being invoked.</param>
      <returns>The response to send back to the client (wrapped by a task).</returns>
    </member>
    <member name="T:Notes2022.Server.Globals">
      <summary>
   Class Globals.
   </summary>
    </member>
    <member name="P:Notes2022.Server.Globals.AccessOtherId">
      <summary>
   Gets the access other identifier.
   </summary>
      <value>The access other identifier.</value>
    </member>
    <member name="P:Notes2022.Server.Globals.ImportedAuthorId">
      <summary>
   Gets the imported author identifier.
   </summary>
      <value>The imported author identifier.</value>
    </member>
    <member name="P:Notes2022.Server.Globals.GuestId">
      <summary>
   Gets or sets the guest identifier.
   </summary>
      <value>The guest identifier.</value>
    </member>
    <member name="P:Notes2022.Server.Globals.TimeZoneDefaultID">
      <summary>
   Gets or sets the time zone default identifier.
   </summary>
      <value>The time zone default identifier.</value>
    </member>
    <member name="P:Notes2022.Server.Globals.ImportRoot">
      <summary>
   Gets or sets the import root.
   </summary>
      <value>The import root.</value>
    </member>
    <member name="P:Notes2022.Server.Globals.SendGridEmail">
      <summary>
   Gets or sets the send grid email.
   </summary>
      <value>The send grid email.</value>
    </member>
    <member name="P:Notes2022.Server.Globals.SendGridName">
      <summary>
   Gets or sets the name of the send grid.
   </summary>
      <value>The name of the send grid.</value>
    </member>
    <member name="P:Notes2022.Server.Globals.SendGridApiKey">
      <summary>
   Gets or sets the send grid API key.
   </summary>
      <value>The send grid API key.</value>
    </member>
    <member name="M:Notes2022.Server.Globals.Base64Encode(System.String)">
      <summary>
   Base64s the encode.
   </summary>
      <param name="plainText">The plain text.</param>
      <returns>System.String.</returns>
    </member>
    <member name="M:Notes2022.Server.Globals.Base64Decode(System.String)">
      <summary>
   Base64s the decode.
   </summary>
      <param name="encodedString">The encoded string.</param>
      <returns>System.String.</returns>
    </member>
    <member name="M:Notes2022.Server.Globals.UTimeBlazor(DateTime)">
      <summary>
   us the time blazor.
   </summary>
      <param name="dt">The dt.</param>
      <returns>DateTime.</returns>
    </member>
  </members>
</doc>